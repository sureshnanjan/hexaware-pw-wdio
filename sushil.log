**********************
Windows PowerShell transcript start
Start time: 20240207105358
Username: CORP\1000064514
RunAs User: CORP\1000064514
Configuration Name: 
Machine: LTPU-4QZSM13 (Microsoft Windows NT 10.0.19044.0)
Host Application: C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe
Process ID: 10264
PSVersion: 5.1.19041.3570
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.19041.3570
BuildVersion: 10.0.19041.3570
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is sushil.log
PS C:\Users\64514\automation-pl-wdio> npm init playwright@latest
Need to install the following packages:
  create-playwright@1.17.131
Ok to proceed? (y) Y
Getting started with writing end-to-end tests with Playwright:
Initializing project in '.'
√ Do you want to use TypeScript or JavaScript? · TypeScript
√ Where to put your end-to-end tests? · tests
√ Add a GitHub Actions workflow? (y/N) · false
√ Install Playwright browsers (can be done manually via 'npx playwright install')? (Y/n) · true
Initializing NPM project (npm init -y)…
ruwWrote to C:\Users\64514\automation-pl-wdio\package.json:

{
  "name": "automation-pl-wdio",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC"
}


Installing Playwright Test (npm install --save-dev @playwright/test)…

added 3 packages, and audited 4 packages in 5s

found 0 vulnerabilities
Installing Types (npm install --save-dev @types/node)…

added 2 packages, and audited 6 packages in 2s

found 0 vulnerabilities
Downloading browsers (npx playwright install)…
Downloading Chromium 121.0.6167.57 (playwright build v1097) from https://playwright.azureedge.net/builds/chromium/1097/chromium-win64.zip
122.2 MiB [====================] 100% 0.0s
Chromium 121.0.6167.57 (playwright build v1097) downloaded to C:\Users\64514\AppData\Local\ms-playwright\chromium-1097
Downloading FFMPEG playwright build v1009 from https://playwright.azureedge.net/builds/ffmpeg/1009/ffmpeg-win64.zip
1.4 MiB [====================] 100% 0.0s
FFMPEG playwright build v1009 downloaded to C:\Users\64514\AppData\Local\ms-playwright\ffmpeg-1009
Downloading Firefox 121.0 (playwright build v1438) from https://playwright.azureedge.net/builds/firefox/1438/firefox-win64.zip
80.9 MiB [====================] 100% 0.0s
Firefox 121.0 (playwright build v1438) downloaded to C:\Users\64514\AppData\Local\ms-playwright\firefox-1438
Downloading Webkit 17.4 (playwright build v1967) from https://playwright.azureedge.net/builds/webkit/1967/webkit-win64.zip
46.6 MiB [====================] 100% 0.0s
Webkit 17.4 (playwright build v1967) downloaded to C:\Users\64514\AppData\Local\ms-playwright\webkit-1967
Writing playwright.config.ts.
Writing tests\example.spec.ts.
Writing tests-examples\demo-todo-app.spec.ts.
Writing package.json.
✔ Success! Created a Playwright Test project at C:\Users\64514\automation-pl-wdio

Inside that directory, you can run several commands:

  npx playwright test
    Runs the end-to-end tests.

  npx playwright test --ui
    Starts the interactive UI mode.

  npx playwright test --project=chromium
    Runs the tests only on Desktop Chrome.

  npx playwright test example
    Runs the tests in a specific file.

  npx playwright test --debug
    Runs the tests in debug mode.

  npx playwright codegen
    Auto generate tests with Codegen.

We suggest that you begin by typing:

    npx playwright test

And check out the following files:
  - .\tests\example.spec.ts - Example end-to-end test
  - .\tests-examples\demo-todo-app.spec.ts - Demo Todo App end-to-end tests
  - .\playwright.config.ts - Playwright Test configuration

Visit https://playwright.dev/docs/intro for more information. ✨

Happy hacking! ��
npm notice
npm notice New major version of npm available! 8.19.1 -> 10.4.0
npm notice Changelog: https://github.com/npm/cli/releases/tag/v10.4.0
npm notice Run npm install -g npm@10.4.0 to update!
npm notice
PS C:\Users\64514\automation-pl-wdio> npm install -g npm@10.4.0
npm ERR! code EBADENGINE
npm ERR! engine Unsupported engine
npm ERR! engine Not compatible with your version of node/npm: npm@10.4.0
npm ERR! notsup Not compatible with your version of node/npm: npm@10.4.0
npm ERR! notsup Required: {"node":"^18.17.0 || >=20.5.0"}
npm ERR! notsup Actual:   {"npm":"8.19.1","node":"v16.13.2"}

npm ERR! A complete log of this run can be found in:
npm ERR!     C:\Users\64514\AppData\Local\npm-cache\_logs\2024-02-07T05_43_08_522Z-debug-0.log
PS C:\Users\64514\automation-pl-wdio> npm install -g npm@10.4.0
npm ERR! code EBADENGINE
npm ERR! engine Unsupported engine
npm ERR! engine Not compatible with your version of node/npm: npm@10.4.0
npm ERR! notsup Not compatible with your version of node/npm: npm@10.4.0
npm ERR! notsup Required: {"node":"^18.17.0 || >=20.5.0"}
npm ERR! notsup Actual:   {"npm":"8.19.1","node":"v16.13.2"}

npm ERR! A complete log of this run can be found in:
npm ERR!     C:\Users\64514\AppData\Local\npm-cache\_logs\2024-02-07T05_43_18_262Z-debug-0.log
PS C:\Users\64514\automation-pl-wdio> npx playwright test

Running 6 tests using 4 workers
  1) [chromium] › example.spec.ts:3:5 › has title ──────────────────────────────────────────────────

    Test timeout of 30000ms exceeded.

    Error: page.goto: Test timeout of 30000ms exceeded.
    Call log:
      - navigating to "https://playwright.dev/", waiting until "load"


      2 |
      3 | test('has title', async ({ page }) => {
    > 4 |   await page.goto('https://playwright.dev/');
        |              ^
      5 |
      6 |   // Expect a title "to contain" a substring.
      7 |   await expect(page).toHaveTitle(/Playwright/);

        at C:\Users\64514\automation-pl-wdio\tests\example.spec.ts:4:14

  2) [chromium] › example.spec.ts:10:5 › get started link ──────────────────────────────────────────

    Test timeout of 30000ms exceeded.

    Error: page.goto: Test timeout of 30000ms exceeded.
    Call log:
      - navigating to "https://playwright.dev/", waiting until "load"


       9 |
      10 | test('get started link', async ({ page }) => {
    > 11 |   await page.goto('https://playwright.dev/');
         |              ^
      12 |
      13 |   // Click the get started link.
      14 |   await page.getByRole('link', { name: 'Get started' }).click();

        at C:\Users\64514\automation-pl-wdio\tests\example.spec.ts:11:14

  2 failed
    [chromium] › example.spec.ts:3:5 › has title ───────────────────────────────────────────────────
    [chromium] › example.spec.ts:10:5 › get started link ───────────────────────────────────────────
  4 passed (58.3s)

  Serving HTML report at http://localhost:9323. Press Ctrl+C to quit.
Terminate batch job (Y/N)? Y
PS C:\Users\64514\automation-pl-wdio> TerminatingError(): "The pipeline has been stopped."
>> TerminatingError(): "The pipeline has been stopped."
PS C:\Users\64514\automation-pl-wdio> npx playwright show-report

  Serving HTML report at http://localhost:9323. Press Ctrl+C to quit.
Terminate batch job (Y/N)?
^C
PS C:\Users\64514\automation-pl-wdio> TerminatingError(): "The pipeline has been stopped."
>> TerminatingError(): "The pipeline has been stopped."
